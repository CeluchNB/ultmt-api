# OpenAPI spec for GCP API Gateway
swagger: "2.0"
info:
  title: ultmt-app-api
  description: API specification for The Ultmt App
  version: 1.0.0
  contact:
    name: Developer Support
    email: developer@theultmtapp.com
host: ultmt-app-api-gateway-3eoqn743.uc.gateway.dev
schemes:
  - "https"
security:
  - APIKey: []
paths:
  /ultmt:
    get:
      summary: Basic API description
      operationId: apiDescription
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: A successful response
          schema:
            type: string
  /api/v1/user/search:
    get:
      summary: Search for users by name or username
      operationId: searchUsers
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: q
          type: string
          description: Value to search for users by, must be greater than 3 characters long.
      responses:
        '200':
          description: An array of length 0 or greater with users
          schema:
            type: array
            items:
              $ref: '#/definitions/EmbeddedUser'
        '400':
          description: An error, often because of too few search characters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An error message from a backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user:
    post:
      summary: Create a user
      operationId: createUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: user
          description: Data needed to create a user
          schema:
            $ref: '#/definitions/CreateUser'
      responses:
        '201':
          description: User was successfully created
          schema:
            $ref: '#/definitions/UserWithToken'
        '400':
          description: User was unsuccessfully created due to some user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: User was unsuccessfully created due to backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/login:
    post:
      summary: Login with local authentication strategy
      operationId: loginUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: user
          description: Data needed to login
          schema:
            $ref: '#/definitions/LoginUser'
      responses:
        '200':
          description: User was successfully logged in
          schema:
            type: string
        '401':
          description: User credentials were invalid
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: A token could not be created
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/logout:
    post:
      summary: Endpoint to log a user out with a specific token
      operationId: logoutUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      responses:
        '200':
          description: A success message with no data
        '404':
          description: An error message because the user was not found
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/logoutAll:
    post:
      summary: Endpoint to log a user out of all devices
      operationId: logoutAllUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      responses:
        '200':
          description: A success message with no data
        '404':
          description: An error message because the user was not found
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/me:
    get:
      summary: Endpoint to get a user by his auth token
      operationId: getMyProfile
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      responses:
        '200':
          description: A user object found by the auth token
          schema:
            $ref: '#/definitions/User'
        '401':
          description: An unauthenticated response
          schema:
            $ref: '#/definitions/Error'
    delete:
      summary: Delete the user's account
      operationId: deleteUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      responses:
        '200':
          description: A response indicating success
        '401':
            description: An unauthenticated response
            schema:
              $ref: '#/definitions/Error'
  /api/v1/user/{id}:
    get:
      summary: Get a user by his ID
      operationId: getUserById
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          type: string
      responses:
        '200':
          description: A user object found by the ID
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user error message
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/open:
    put:
      summary: Change a user's open to requests status
      operationId: openUserToRequests
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - name: open
          in: query
          description: Value of user's open to request status
          required: true
          type: boolean
      responses:
        '200':
          description: A success message with updated user object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/leave/team:
    post:
      summary: Leave a team by a user
      operationId: userLeaveTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - name: team
          in: query
          description: Team ID
          required: true
          type: string
      responses:
        '200':
          description: A success message with updated user object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user or team error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/managerLeave:
    put:
      summary: As a manager, leave a team
      operationId: managerLeaveTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - name: team
          in: query
          description: Team ID
          required: true
          type: string
      responses:
        '200':
          description: A success message with updated user object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user or team error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/changePassword:
    put:
      summary: Change a user's password
      operationId: changePassword
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: newPasswordData
          description: Data needed to change a user's password
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              newPassword:
                type: string
      responses:
        '200':
          description: User object with new token
          schema:
            $ref: '#/definitions/UserWithToken'
        '400':
          description: There was an error when updating the password
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthenticated user
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error on backend side, possibly with generating token
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/changeEmail:
    put:
      summary: Change a user's email
      operationId: changeEmail
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: newEmailData
          description: Data needed to change a user's email
          schema:
            type: object
            properties:
              email:
                type: string
              password:
                type: string
              newEmail:
                type: string
      responses:
        '200':
          description: Updated user object
          schema:
            $ref: '#/definitions/User'
        '400':
          description: There was an error when updating the email
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthenticated user
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: User not found error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error on backend side, possibly with generating email validation
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/changeName:
    put:
      summary: Change a user's email
      operationId: changeName
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: body
          name: newNameData
          description: Data needed to change a user's name
          schema:
            type: object
            properties:
              newFirstName:
                type: string
              newLastName:
                type: string
      responses:
        '200':
          description: Updated user object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error changing the name on backend
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/requestPasswordRecovery:
    post:
      summary: Request a recovery code
      operationId: requestPasswordRecovery
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: email
          description: Data needed to request password update
          schema:
            type: object
            properties:
              email:
                type: string
      responses:
        '200':
          description: Success message with no details
        '404':
          description: Unable to find user message
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Error on backend/unable to send email
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/resetPassword:
    post:
      summary: Reset a user's password with a recovery code
      operationId: resetPassword
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: body
          name: newPasswordData
          description: Data needed to reset a user's password
          schema:
            type: object
            properties:
              passcode:
                type: string
              newPassword:
                type: string
      responses:
        '200':
          description: User with new token
          schema:
            $ref: '#/definitions/UserWithToken'
        '400':
          description: Error message for invalid passcode
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound user message
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error message
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/setPrivate:
    put:
      summary: Set a user's account to private mode
      operationId: setUserPrivate
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: query
          name: private
          required: true
          type: boolean
      responses:
        '200':
          description: Updated user object
          schema:
            $ref: '#/definitions/User'
        '404':
          description: Unfound user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/joinTeamByCode:
    post:
      summary: Set a user's account to private mode
      operationId: joinTeamByCode
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: query
          name: code
          required: true
          type: string
      responses:
        '200':
          description: Updated user object
          schema:
            $ref: '#/definitions/User'
        '400':
          description: Error message for invalid passcode
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound user or team message
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error message
          schema:
            $ref: '#/definitions/Error'
  /api/v1/user/manager/authenticate:
    get:
      summary: Authenticate a user as manager of a team
      operationId: authenticateManager
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: query
          name: team
          required: true
          type: string
      responses:
        '200':
          description: User is manager
          schema:
            $ref: '#/definitions/User'
        '401':
          description: User is unauthenticated
  /api/v1/team/search:
    get:
      summary: Search for team by location, name, or teamname
      operationId: searchTeams
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: query
          name: q
          type: string
          description: Value to search for teams by, must be greater than 3 characters long.
      responses:
        '200':
          description: An array of length 0 or greater with team
          schema:
            type: array
            items:
              $ref: '#/definitions/EmbeddedTeam'
        '400':
          description: An error, often because of too few search characters
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: An error message from a backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team:
    post:
      summary: Create a team
      operationId: createTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: body
          name: createTeam
          description: Data to create a team with
          schema:
            $ref: '#/definitions/CreateTeam'
      responses:
        '201':
          description: Created team object
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: Invalid team data
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unable to find user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/{id}:
    get:
      summary: Get team by ID
      operationId: getTeamById
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: path
          name: id
          required: true
          description: Team ID
          type: string
      responses:
        '200':
          description: Team object
          schema:
            $ref: '#/definitions/Team'
        '404':
          description: Team not found error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/managing/{id}:
    get:
      summary: Get team by ID
      operationId: getManagingTeamById
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          required: true
          description: Team ID
          type: string
      responses:
        '200':
          description: Team object
          schema:
            $ref: '#/definitions/Team'
        '401':
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Team not found error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/remove/player/{id}:
    post:
      summary: Remove a player from a team by the player's ID
      operationId: teamRemovePlayer
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
        - in: query
          name: user
          description: User ID
          type: string
      responses:
        '200':
          description: Updated team object
          schema:
            $ref: '#/definitions/Team'
        '404':
          description: Unfound user or team error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/rollover/{id}:
    post:
      summary: Rollover a team to the next season
      operationId: rolloverTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
        - in: body
          name: team
          description: Data to define updated team
          schema:
            type: object
            properties:
              seasonStart:
                type: string
                format: date
              seasonEnd:
                type: string
                format: date
              copyPlayers:
                type: boolean
      responses:
        '200':
          description: New team object
          schema:
            $ref: '#/definitions/Team'
        '400':
          description: Invalid data error
          schema:
            $ref: '#/definitions/Error'
        '401':
          description: Unauthorized response
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound team or user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/open/{id}:
    put:
      summary: Open the team to requests to join
      operationId: openTeamToRequests
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
        - in: query
          name: open
          description: Boolean for open to requests
          type: boolean
      responses:
        '200':
          description: Updated user data
          schema:
            $ref: '#/definitions/Team'
        '401':
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound team
          schema:
            $ref: '#/definitions/Error'
        '500':
          description:  Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/{id}/addManager:
    post:
      summary: Add a manager to a team
      operationId: teamAddManager
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
        - in: query
          name: manager
          description: New manager ID
          type: string
      responses:
        '200':
          description: Updated team object
          schema:
            $ref: '#/definitions/Team'
        '401':
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound team
          schema:
            $ref: '#/definitions/Error'
        '500':
          description:  Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/team/getBulkCode:
    post:
      summary: Get bulk code to let users join team
      operationId: getBulkCode
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: query
          name: id
          description: Team ID
          type: string
      responses:
        '200':
          description: Success with code
          schema:
            type: string
        '401':
          description: Unauthorized error
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound team
          schema:
            $ref: '#/definitions/Error'
        '500':
          description:  Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/archiveTeam/{id}:
    get:
      summary: Get team that has been archived
      operationId: archiveTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
      responses:
        '200':
          description: Team object
          schema:
            $ref: '#/definitions/Team'
        '404':
          description: Unfound team
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/userRequests:
    get:
      summary: Get all of a user's requests by his auth token
      operationId: getUserRequests
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      responses:
        '200':
          description: Array of detailed roster requests
          schema:
            type: array
            items:
              $ref: '#/definitions/DetailedRosterRequest'
        '401':
          description: Unauthenticated request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Unfound user error
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/{id}:
    get:
      summary: Get a roster request by id
      operationId: getRequestById
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: A detailed roster request object
          schema:
            $ref: '#/definitions/DetailedRosterRequest'
        '401':
          description: User is unauthorized to view request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: The request was not found
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/team/{id}:
    post:
      summary: Roster request creation by team
      operationId: createRequestByTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
        - in: query
          name: user
          description: ID of user being requested
          required: true
          type: string
      responses:
        '200':
          description: Successful request created
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to create request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Team or user unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
    get:
      summary: Get all requests for a team
      operationId: getRequestsByTeam
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          type: string
      responses:
        '200':
          description: Successfully got requests
          schema:
            type: object
            properties:
              requests:
                type: array
                items:
                  $ref: '#/definitions/DetailedRosterRequest'
        '401':
          description: User unauthorized to get requests
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Team unfound
          schema:
            $ref: '#/definitions/Error' 
  /api/v1/request/user:
    post:
      summary: Roster request by user
      operationId: createRequestByUser
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: query
          name: team
          description: ID of team being requested
          required: true
          type: string
      responses:
        '200':
          description: Successful request created
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to create request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Team unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/team/accept/{id}:
    post:
      summary: Team accepting a user's request
      operationId: teamAcceptRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully accepted
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to modify request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request, Team, or User unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/team/deny/{id}:
    post:
      summary: Team denying a user's request
      operationId: teamDenyRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully denied
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to modify request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request, Team, or User unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/user/accept/{id}:
    post:
      summary: User accepting a team's request
      operationId: userAcceptRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully accepted
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to modify request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request, Team, or User unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/user/deny/{id}:
    post:
      summary: User denying a team's request
      operationId: userDenyRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully denied
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to modify request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request, Team, or User unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/team/delete/{id}:
    post:
      summary: Team deleting a request
      operationId: teamDeleteRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully deleted
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to delete request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/request/user/delete/{id}:
    post:
      summary: User deleting a request
      operationId: userDeleteRequest
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
        disable_auth: true
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          type: string
      responses:
        '200':
          description: Request successfully deleted
          schema:
            $ref: '#/definitions/RosterRequest'
        '401':
          description: User unauthorized to delete request
          schema:
            $ref: '#/definitions/Error'
        '404':
          description: Request unfound
          schema:
            $ref: '#/definitions/Error'
        '500':
          description: Backend error
          schema:
            $ref: '#/definitions/Error'
  /api/v1/otp/expired:
    delete:
      summary: Delete expired one time passcodes
      operationId: deleteExpiredPasscodes
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: Success message
        '500':
          description: Backend error
  /stall-one:
    get:
      summary: Basic description of games microservice API
      operationId: gamesMicroserviceDescription
      x-google-backend:
        address: https://stall-one-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: A success message
  /stall-one/test:
    get:
      summary: Secondary test endpoint for games microservice API
      operationId: testGamesMicroservice
      x-google-backend:
        address: https://stall-one-nal27utw4a-uc.a.run.app
        path_translation: APPEND_PATH_TO_ADDRESS
      responses:
        '200':
          description: A success message
securityDefinitions:
  APIKey:
    type: apiKey
    in: header
    name: X-API-Key
definitions:
  CreateTeam:
    type: object
    properties:
      place:
        type: string
      name:
        type: string
      teamname:
        type: string
      seasonStart:
        type: string
        format: date
      seasonEnd:
        type: string
        format: date
  CreateUser:
    type: object
    properties:
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      username:
        type: string
      password:
        type: string
  EmbeddedUser:
    type: object
    properties:
      _id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      username:
        type: string
  User:
    type: object
    properties:
      _id:
        type: string
      firstName:
        type: string
      lastName:
        type: string
      email:
        type: string
      username:
        type: string
      playerTeams:
        type: array
        items:
          $ref: '#/definitions/EmbeddedTeam'
      managerTeams:
        type: array
        items:
          $ref: '#/definitions/EmbeddedTeam'
      archiveTeams:
        type: array
        items:
          $ref: '#/definitions/EmbeddedTeam'
      stats:
        type: string
        items:
          type: string
      private:
        type: boolean
      openToRequests:
        type: boolean
      requests:
        type: array
        items:
          type: string
  UserWithToken:
    type: object
    properties:
      user:
        $ref: '#/definitions/User'
      token:
        type: string
  LoginUser:
    type: object
    properties:
      email:
        type: string
      password:
        type: string
  EmbeddedTeam:
    type: object
    properties:
      _id:
        type: string
      place:
        type: string
      name:
        type: string
      teamname:
        type: string
      seasonStart:
        type: string
        format: date
      seasonEnd:
        type: string
        format: date
  Team:
    type: object
    properties:
      _id:
        type: string
      place:
        type: string
      name:
        type: string
      teamname:
        type: string
      seasonStart:
        type: string
        format: date
      seasonEnd:
        type: string
        format: date
      managers:
        type: array
        items:
          $ref: '#/definitions/EmbeddedUser'
      players:
        type: array
        items:
          $ref: '#/definitions/EmbeddedUser'
      seasonNumber:
        type: integer
      continuationId:
        type: string
      rosterOpen:
        type: boolean
      requests:
        type: array
        items:
          type: string
      games:
        type: array
        items:
          type: string
  DetailedRosterRequest:
    type: object
    properties:
      _id:
        type: string
      team: 
        type: string
      user:
        type: string
      requestSource:
        type: string
      status:
        type: string
      teamDetails:
        $ref: '#/definitions/EmbeddedTeam'
      userDetails:
        $ref: '#/definitions/EmbeddedUser'
  RosterRequest:
    type: object
    properties:
      _id:
        type: string
      team: 
        type: string
      user:
        type: string
      requestSource:
        type: string
      status:
        type: string
  Error:
    type: object
    properties:
      message:
        type: string