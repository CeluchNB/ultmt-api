# OpenAPI spec for GCP API Gateway
openapi: 3.0.0
info:
  title: ultmt-app-api
  description: API specification for The Ultmt App
  version: 1.0.0
  contact:
    name: Developer Support
    email: developer@theultmtapp.com
servers:
  - url: https://dev.theultmtapp.com
    description: The development environment for The Ultmt App

paths:
  /ultmt:
    get:
      summary: Basic API description
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      responses:
        '200':
          description: A successful response
          content:
            application/json:
              schema:
                type: string
  /api/v1/user/search:
    get:
      summary: Search for users by name or username
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Value to search for users by, must be greater than 3 characters long.
      responses:
        '200':
          description: An array of length 0 or greater with users
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedUser'
        '400':
          description: An error, often because of too few search characters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error message from a backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user:
    post:
      summary: Create a user
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to create a user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUser'
      responses:
        '201':
          description: User was successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: User was unsuccessfully created due to some user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: User was unsuccessfully created due to backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/login:
    post:
      summary: Login with local authentication strategy
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to login
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUser'
      responses:
        '200':
          description: User was successfully logged in
          content:
            application/json:
              schema:
                type: string
        '401':
          description: User credentials were invalid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: A token could not be created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/logout:
    post:
      summary: Endpoint to log a user out with a specific token
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A success message with no data
        '404':
          description: An error message because the user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/logoutAll:
    post:
      summary: Endpoint to log a user out of all devices
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A success message with no data
        '404':
          description: An error message because the user was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/me:
    get:
      summary: Endpoint to get a user by his auth token
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A user object found by the auth token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '401':
          description: An unauthenticated response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      summary: Delete the user's account
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      responses:
        '200':
          description: A response indicating success
        '401':
            description: An unauthenticated response
            content:
              application/json:
                schema:
                  $ref: '#/components/schemas/Error'
  /api/v1/user/{id}:
    get:
      summary: Get a user by his ID
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - name: id
          in: path
          description: User ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A user object found by the Id
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/open:
    put:
      summary: Change a user's open to requests status
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - name: open
          in: query
          description: Value of user's open to request status
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: A success message with updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/leave/team:
    post:
      summary: Leave a team by a user
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - name: team
          in: query
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A success message with updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user or team error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/managerLeave:
    put:
      summary: As a manager, leave a team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - name: team
          in: query
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A success message with updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user or team error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/changePassword:
    put:
      summary: Change a user's password
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to change a user's password
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: User object with new token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: There was an error when updating the password
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error on backend side, possibly with generating token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/changeEmail:
    put:
      summary: Change a user's email
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to change a user's email
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                newEmail:
                  type: string
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: There was an error when updating the email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthenticated user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: User not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error on backend side, possibly with generating email validation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/changeName:
    put:
      summary: Change a user's email
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      requestBody:
        description: Data needed to change a user's name
        content:
          application/json:
            schema:
              type: object
              properties:
                newFirstName:
                  type: string
                newLastName:
                  type: string
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error changing the name on backend
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/requestPasswordRecovery:
    post:
      summary: Request a recovery code
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to request password update
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
      responses:
        '200':
          description: Success message with no details
        '404':
          description: Unable to find user message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Error on backend/unable to send email
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/resetPassword:
    post:
      summary: Reset a user's password with a recovery code
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      requestBody:
        description: Data needed to reset a user's password
        content:
          application/json:
            schema:
              type: object
              properties:
                passcode:
                  type: string
                newPassword:
                  type: string
      responses:
        '200':
          description: User with new token
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserWithToken'
        '400':
          description: Error message for invalid passcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound user message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/setPrivate:
    put:
      summary: Set a user's account to private mode
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: private
          required: true
          schema:
            type: boolean
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: Unfound user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/user/joinTeamByCode:
    post:
      summary: Set a user's account to private mode
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: code
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Updated user object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Error message for invalid passcode
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound user or team message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/search:
    get:
      summary: Search for team by location, name, or teamname
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - in: query
          name: q
          schema:
            type: string
          description: Value to search for teams by, must be greater than 3 characters long.
      responses:
        '200':
          description: An array of length 0 or greater with team
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/EmbeddedTeam'
        '400':
          description: An error, often because of too few search characters
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: An error message from a backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team:
    post:
      summary: Create a team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      requestBody:
        description: Data to create a team with
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTeam'
      responses:
        '201':
          description: Created team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Invalid team data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unable to find user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/{id}:
    get:
      summary: Get team by ID
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - in: path
          name: id
          required: true
          description: Team ID
          schema:
            type: string
      responses:
        '200':
          description: Team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Team not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/managing/{id}:
    get:
      summary: Get team by ID
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          description: Team ID
          schema:
            type: string
      responses:
        '200':
          description: Team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team not found error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/remove/player/{id}:
    post:
      summary: Remove a player from a team by the player's ID
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
        - in: query
          name: user
          description: User ID
          schema:
            type: string
      responses:
        '200':
          description: Updated team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Unfound user or team error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/rollover/{id}:
    post:
      summary: Rollover a team to the next season
      x-google-backend:
          address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
      requestBody:
        description: Data to define updated team
        content:
          application/json:
            schema:
              type: object
              properties:
                seasonStart:
                  type: string
                  format: date
                seasonEnd:
                  type: string
                  format: date
                copyPlayers:
                  type: boolean
      responses:
        '200':
          description: New team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '400':
          description: Invalid data error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '401':
          description: Unauthorized response
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound team or user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/open/{id}:
    put:
      summary: Open the team to requests to join
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
        - in: query
          name: open
          description: Boolean for open to requests
          schema:
            type: boolean
      responses:
        '200':
          description: Updated user data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound team
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description:  Backend error
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/{id}/addManager:
    post:
      summary: Add a manager to a team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
        - in: query
          name: manager
          description: New manager Id
          schema:
            type: string
      responses:
        '200':
          description: Updated team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound team
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description:  Backend error
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/team/getBulkCode:
    post:
      summary: Get bulk code to let users join team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: id
          description: Team ID
          schema:
            type: string
      responses:
        '200':
          description: Success with code
          content:
            application/json:
              schema:
                type: string
        '401':
          description: Unauthorized error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound team
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description:  Backend error
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/archiveTeam/{id}:
    get:
      summary: Get team that has been archived
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Team object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Team'
        '404':
          description: Unfound team
          content:
            application/json: 
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/userRequests:
    get:
      summary: Get all of a user's requests by his auth token
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Array of detailed roster requests
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/DetailedRosterRequest'
        '401':
          description: Unauthenticated request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Unfound user error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/{id}:
    get:
      summary: Get a roster request by id
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: A detailed roster request object
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedRosterRequest'
        '401':
          description: User is unauthorized to view request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: The request was not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/team/{id}:
    post:
      summary: Roster request creation by team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
        - in: query
          name: user
          description: ID of user being requested
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful request created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to create request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team or user unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      summary: Get all requests for a team
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Team ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully got requests
          content:
            application/json:
              schema:
                type: object
                properties:
                  requests:
                    type: array
                    items:
                      $ref: '#/components/schemas/DetailedRosterRequest'
        '401':
          description: User unauthorized to get requests
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /api/v1/request/user:
    post:
      summary: Roster request by user
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: query
          name: team
          description: ID of team being requested
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successful request created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to create request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Team unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/team/accept/{id}:
    post:
      summary: Team accepting a user's request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to modify request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request, Team, or User unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/team/deny/{id}:
    post:
      summary: Team denying a user's request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to modify request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request, Team, or User unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/user/accept/{id}:
    post:
      summary: User accepting a team's request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to modify request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request, Team, or User unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/user/deny/{id}:
    post:
      summary: User denying a team's request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully denied
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to modify request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request, Team, or User unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/team/delete/{id}:
    post:
      summary: Team deleting a request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to delete request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/request/user/delete/{id}:
    post:
      summary: User deleting a request
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      security:
        - BearerAuth: []
      parameters:
        - in: path
          name: id
          description: Request ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Request successfully deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RosterRequest'
        '401':
          description: User unauthorized to delete request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Request unfound
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '500':
          description: Backend error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /api/v1/otp/expired:
    delete:
      summary: Delete expired one time passcodes
      x-google-backend:
        address: https://ultmt-api-nal27utw4a-uc.a.run.app
      responses:
        '200':
          description: Success message
        '500':
          description: Backend error
  /stall-one:
    get:
      summary: Basic description of games microservice API
      x-google-backend:
        address: https://stall-one-nal27utw4a-uc.a.run.app
      responses:
        '200':
          description: A success message
  /stall-one/test:
    get:
      summary: Secondary test endpoint for games microservice API
      x-google-backend:
        address: https://stall-one-nal27utw4a-uc.a.run.app
      responses:
        '200':
          description: A success message
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CreateTeam:
      type: object
      properties:
        place:
          type: string
        name:
          type: string
        teamname:
          type: string
        seasonStart:
          type: string
          format: date
        seasonEnd:
          type: string
          format: date
    CreateUser:
      type: object
      properties:
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        password:
          type: string
    EmbeddedUser:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        username:
          type: string
    User:
      type: object
      properties:
        _id:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
        username:
          type: string
        playerTeams:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedTeam'
        managerTeams:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedTeam'
        archiveTeams:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedTeam'
        stats:
          type: string
          items:
            type: string
        private:
          type: boolean
        openToRequests:
          type: boolean
        requests:
          type: array
          items:
            type: string
    UserWithToken:
      type: object
      properties:
        user:
          $ref: '#/components/schemas/User'
        token:
          type: string
    LoginUser:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
    EmbeddedTeam:
      type: object
      properties:
        _id:
          type: string
        place:
          type: string
        name:
          type: string
        teamname:
          type: string
        seasonStart:
          type: string
          format: date
        seasonEnd:
          type: string
          format: date
    Team:
      type: object
      properties:
        _id:
          type: string
        place:
          type: string
        name:
          type: string
        teamname:
          type: string
        seasonStart:
          type: string
          format: date
        seasonEnd:
          type: string
          format: date
        managers:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedUser'
        players:
          type: array
          items:
            $ref: '#/components/schemas/EmbeddedUser'
        seasonNumber:
          type: integer
        continuationId:
          type: string
        rosterOpen:
          type: boolean
        requests:
          type: array
          items:
            type: string
        games:
          type: array
          items:
            type: string
    DetailedRosterRequest:
      type: object
      properties:
        _id:
          type: string
        team: 
          type: string
        user:
          type: string
        requestSource:
          type: string
        status:
          type: string
        teamDetails:
          $ref: '#/components/schemas/EmbeddedTeam'
        userDetails:
          $ref: '#/components/schemas/EmbeddedUser'
    RosterRequest:
      type: object
      properties:
        _id:
          type: string
        team: 
          type: string
        user:
          type: string
        requestSource:
          type: string
        status:
          type: string
    Error:
      type: object
      properties:
        message:
          type: string