
# name: Node CI

# on: [push, pull_request]

# jobs:
#   build:
#     runs-on: ubuntu-latest

#     environment:
#       name: Development

#     strategy:
#       matrix:
#         node-version: [12.x, 14.x]
#         mongodb-version: ['4.2', '4.4']

#     steps:
#     - name: Git checkout
#       uses: actions/checkout@v2

#     - name: Use Node.js ${{ matrix.node-version }}
#       uses: actions/setup-node@v2.1.5
#       with:
#         node-version: ${{ matrix.node-version }}

#     - name: Start MongoDB
#       uses: supercharge/mongodb-github-action@1.6.0
#       with:
#         mongodb-version: ${{ matrix.mongodb-version }}
    
#     - name: Create env
#       run: |
#         cd src
#         mkdir config
#         cd config
#         touch .env
#         echo PORT=${{ secrets.PORT }} >> .env
#         echo MONGOOSE_URL=${{ secrets.MONGOOSE_URL }} >> .env
#         echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
#         cd ..
        
#     - name: Install and Build
#       run: |
#         npm install
#         npm ci
#         npm build --if-present
#       env:
#         CI: true

#   test:
#     runs-on: ubuntu-latest

#     environment:
#       name: Test

#     steps:
#     - name: Git checkout
#       uses: actions/checkout@v2

#     - name: Use Node.js 17
#       uses: actions/setup-node@v2.1.5
#       with:
#         node-version: '17.x'

#     - name: Start MongoDB
#       uses: supercharge/mongodb-github-action@1.7.0
#       with:
#         mongodb-version: '4.4'

#     - name: Create env
#       run: |
#         cd tests
#         mkdir config
#         cd config
#         touch .env
#         echo PORT=${{ secrets.PORT }} >> .env
#         echo MONGOOSE_URL=${{ secrets.MONGOOSE_URL }} >> .env
#         echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
#         cd ..
    
#     - name: Test
#       run: |
#         npm install
#         npm ci
#         npm test
#       env:
#         CI: true

#     - name: Upload coverage to Codecov
#       uses: codecov/codecov-action@v1
    
name: Docker CI

on: [ push, pull_request ]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Create env
        run: |
          cd src
          mkdir config
          cd config
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGOOSE_URL=${{ secrets.MONGOOSE_URL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          cd ..
      
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: false

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}

  test:
    runs-on: ubuntu-latest
    
    environment:
      name: Test

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Create env
        run: |
          cd tests
          mkdir config
          cd config
          touch .env
          echo PORT=${{ secrets.PORT }} >> .env
          echo MONGOOSE_URL=${{ secrets.DOCKER_MONGOOSE_URL }} >> .env
          echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
          cat .env
          cd ..
      
      - name: Run Docker CI container
        run: docker compose -f docker-compose.dev.yml up -d --build

      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: 14.x

      - name: Add dependencies
        run: yarn install

      - name: Run tests
        run: yarn test:ci
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1

      - name: Stop containers
        if: always()
        run: docker compose -f docker-compose.dev.yml down